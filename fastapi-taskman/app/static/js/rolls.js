// app/static/js/rolls.js

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞
async function roll(characterId, attribute, skill, resultElement) {
  try {
    const response = await fetch(`/characters/roll/${characterId}/${attribute}/${skill}`);
    if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±—Ä–æ—Å–∫–∞");

    const result = await response.json();
    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –¥–ª—è ${attribute} —Å –Ω–∞–≤—ã–∫–æ–º ${skill}:`, result);

    if (resultElement) {
      resultElement.textContent = `üé≤ ${result.result}`;
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –±—Ä–æ—Å–∫–∞:", error);
    if (resultElement) {
      resultElement.textContent = "‚ö† –û—à–∏–±–∫–∞!";
    }
  }
}

// –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤—Å–µ–º –∫–Ω–æ–ø–∫–∞–º –±—Ä–æ—Å–∫–æ–≤
document.addEventListener("DOMContentLoaded", () => {
  const buttons = document.querySelectorAll(".roll-button");
  if (buttons.length > 0) {
    buttons.forEach(button => {
      button.addEventListener("click", async () => {
        const characterId = button.dataset.characterId;
        const attribute = button.dataset.attribute;
        const skill = button.dataset.skill;
        const resultElement = button.parentElement.querySelector(".roll-result"); // –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ä—è–¥–æ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞

        await roll(characterId, attribute, skill, resultElement);
      });
    });
  } else {
    console.warn("–ù–µ—Ç –∫–Ω–æ–ø–æ–∫ —Å –∫–ª–∞—Å—Å–æ–º .roll-button –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.");
  }
});
